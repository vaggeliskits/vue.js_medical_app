<template>
  <div id="app>"
  <v-app id="inspire">
    <v-navigation-drawer light :enable-resize-watcher="drawer" v-model="drawer"
                         fixed
                         app
                         width="160">
      <v-list dense class="navi">
        <v-list-tile v-on:click.prevent="open_user_profil">
          <v-list-tile-action>
            <v-icon>person</v-icon>
          </v-list-tile-action>
          <v-list-tile-content>
            <v-list-tile-title>Profile</v-list-tile-title>
          </v-list-tile-content>
        </v-list-tile>
        <v-list>
          <v-list-group>
            <v-list-tile slot="activator">
              <v-list-tile-action>
                <v-icon>settings</v-icon>
              </v-list-tile-action>
              <v-list-tile-title>Settings</v-list-tile-title>
              </v-list-tile-content>
            </v-list-tile>
            <v-list-tile @click="open_password_change">
              <v-list-tile-content>
                <v-list-tile-title>Password</v-list-tile-title>
              </v-list-tile-content>
            </v-list-tile>
            <br>
            <v-list-tile @click="open_add_parent">
              <v-list-tile-content>
                <v-list-tile-title>Amka</v-list-tile-title>
              </v-list-tile-content>
            </v-list-tile>
          </v-list-group>
        </v-list>
        <!-- <v-list-tile  v-on:click.prevent="open_user_profil">
          <v-list-tile-action>
            <v-icon>settings</v-icon>
          </v-list-tile-action>
          <v-list-tile-content>
            <v-list-tile-title>Settings</v-list-tile-title>
          </v-list-tile-content>
        </v-list-tile> -->
        <v-list-tile v-on:click.prevent="open_about_dialog">
          <v-list-tile-action>
            <v-icon>info</v-icon>
          </v-list-tile-action>
          <v-list-tile-content>
            <v-list-tile-title>About</v-list-tile-title>
          </v-list-tile-content>
        </v-list-tile>
      </v-list>
    </v-navigation-drawer>
    <v-toolbar color="indigo" dark fixed app>
      <v-toolbar-side-icon @click.stop="drawer = !drawer"></v-toolbar-side-icon>
      <v-toolbar-title>Application</v-toolbar-title>
    </v-toolbar>
    <v-content>
      <div class="welc">
        <h2>{{ msg }}</h2>
        <hr>
        <v-container grid-list-md text-xs-left>
          <v-layout row wrap>
            <v-flex xs12>
              <v-card dark color="white">
                <v-card-text class="px-15">{{'Name : ' + this.fullname}}</v-card-text>
                <v-card-text class="px-15">{{'Amka: ' + this.amka}}</v-card-text>
              </v-card>
            </v-flex>
          </v-layout>
        </v-container>
        <hr>
        <v-container grid-list-md text-xs-center>
          <v-layout row wrap>
            <v-flex xs12>
              <v-card dark color="white">
                <v-card-text class="px-15">Health News</v-card-text>


                <v-card-text class="px-16">
                  <!--<li >-->
                  <!---->
                  <!--</li>-->
                  <app-carousel></app-carousel>

                </v-card-text>
              </v-card>
            </v-flex>
          </v-layout>
        </v-container>
        <hr>

      </div>


      <v-container fluid fill-height>
        <v-layout justify-center align-center>
          <!-- <v-flex text-xs-center>
            <v-tooltip center> -->
          <!-- <v-btn icon large :href="source" target="_blank" slot="activator">
            <v-icon large>code</v-icon>
          </v-btn>
          <span>Source</span> -->
          <!--  </v-tooltip>
           <v-tooltip right> -->
          <!-- <v-btn icon large href="https://codepen.io/johnjleider/pen/rJdVMq" target="_blank" slot="activator">
            <v-icon large>mdi-codepen</v-icon>
          </v-btn>
          <span>Codepen</span> -->
          <!--  </v-tooltip> -->
          <!-- </v-flex> -->
        </v-layout>
      </v-container>
    </v-content>
    <v-speed-dial class="button"
                  v-model="fab"
                  :top="top"
                  :bottom="bottom"
                  :right="right"
                  :left="left"
                  :direction="direction"
                  :open-on-hover="hover"
                  :transition="transition"
                  fixed>
      <v-btn
        slot="activator"
        color="blue darken-2"
        dark
        fab
        hover
        v-model="fab">
        <v-icon>account_circle</v-icon>
        <v-icon>close</v-icon>
      </v-btn>
      <v-btn v-on:click.prevent="diseasesHistory"
             fab
             dark
             small
             color="green">
        <v-icon>perm_identity</v-icon>
      </v-btn>
      <v-btn v-on:click.prevent="add_diseases"
             fab
             dark
             small
             color="indigo">
        <v-icon>add</v-icon>
      </v-btn>
      <v-btn v-on:click.prevent="logout"
             fab
             dark
             small
             color="red">
        <v-icon>exit_to_app</v-icon>
      </v-btn>
    </v-speed-dial>
    <!-- start dialog Diseases History -->
    <v-dialog
      v-model="dialog"
      fullscreen
      transition="dialog-bottom-transition"
      :overlay="false"
      scrollable
    >
      <v-card tile>
        <v-toolbar card dark color="primary">
          <v-btn icon @click.native="dialog = false" dark>
            <v-icon>close</v-icon>
          </v-btn>
          <v-toolbar-title>Diseases History</v-toolbar-title>
          <!-- <v-spacer></v-spacer>
          <v-toolbar-items>
            <v-btn dark flat @click.native="dialog = false">Save</v-btn>
          </v-toolbar-items> -->
        </v-toolbar>
        <h2>Diseases</h2><br>
        <hr>
        <v-container grid-list-md>
          <v-layout row wrap text-xs-center v-for="dise in dises">
            <v-flex xs12>
              <v-card dark color="white">
                <v-card-text class="px-15">{{ dise.name }}</v-card-text>
              </v-card>
            </v-flex>
          </v-layout>
        </v-container>
        <hr>
      </v-card>
      <v-footer color="indigo" app>
        <span class="white--text">&copy; 2017</span>
      </v-footer>
    </v-dialog>
    <!-- Enad dialog Diseases History -->
    <!-- Start Add diseases dialog -->
    <v-dialog
      v-model="add_diseases_dialog"
      fullscreen
      transition="dialog-bottom-transition"
      :overlay="false"
      scrollable
    >
      <v-card tile>
        <v-toolbar card dark color="primary">
          <v-btn icon @click.native="add_diseases_dialog = false" dark>
            <v-icon>close</v-icon>
          </v-btn>
          <v-toolbar-title>Add Diseases</v-toolbar-title>
          <v-spacer></v-spacer>
          <v-toolbar-items>
            <v-btn dark flat @click="save_diseases_user(alldiseases)">Save</v-btn>
          </v-toolbar-items>
        </v-toolbar>
        <h2>Diseases</h2><br>
        <hr>
        <v-container grid-list-md>
          <v-layout row wrap text-xs-left v-for="alldisease in alldiseases">
            <v-flex xs12>
              <v-card dark color="grey">
                <!--<pre>{{alldisease}}</pre>-->
                <v-card-text class="px-15">{{ alldisease.name }} id: {{alldisease.id}}
                </v-card-text>
                <v-switch color="primary" v-model="alldisease.hasDisease" label="Add"></v-switch>
                <pre>{{alldisease.hasDisease}}</pre>
              </v-card>

            </v-flex>

          </v-layout>

        </v-container>
        <hr>
      </v-card>
      <v-footer color="indigo" app>
        <span class="white--text">&copy; 2017</span>
      </v-footer>
    </v-dialog>
    <!-- Enad  Add diseases dialog -->
    <v-dialog v-model="profile_dialog" max-width="500px">
      <v-card>
        <v-card-title>
          <span>User Profile</span>
          <v-spacer></v-spacer>
        </v-card-title>
        <hr>
        <v-container grid-list-md text-xs-left>
          <v-layout row wrap>
            <v-flex xs12>
              <v-card dark color="white">
                <v-card-text class="px-15">{{'Email : ' + this.items.email}}</v-card-text>
                <v-card-text class="px-15">{{'Name : ' + this.fullname}}</v-card-text>
                <v-card-text class="px-15">{{'Amka: ' + this.amka}}</v-card-text>
                <v-card-text class="px-15">{{'Father name: ' + this.items.father_name}}</v-card-text>
                <v-card-text class="px-15">{{'Mother name: ' + this.items.mother_name}}</v-card-text>
              </v-card>
            </v-flex>
          </v-layout>
        </v-container>
        <hr>
        <br>
        <vue-chart type="pie" :data="chartData"></vue-chart>
        <span>Diseases propability</span><br><br>
        <hr>
        <v-container grid-list-md text-xs-left>
          <v-layout row wrap v-for="probability in probabilitys">
            <v-flex xs12>
              <v-card dark color="white">
                <v-card-text class="px-15">{{probability.disease}} probability: {{probability.probability}}
                </v-card-text>
              </v-card>
            </v-flex>
          </v-layout>
        </v-container>
        <v-card-actions>
          <v-btn color="primary" flat @click.stop="profile_dialog=false">Close</v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>
    <v-dialog v-model="about_dialog" max-width="500px">
      <v-card>
        <v-card-title>
          <span><h2>About Medicall App</h2></span>
          <v-spacer></v-spacer>
        </v-card-title>
        <hr>
        <v-container grid-list-md text-xs-left>
          <v-layout row wrap>
            <v-flex xs12>
              <v-card dark color="white">
                <v-card-text class="px-15"><h3>Created by<br>Vaggelis Kitsoulis<br>Hraklis Posnakidis</h3></v-card-text>
              </v-card>
            </v-flex>
          </v-layout>
        </v-container>
        <hr>
        <v-card-actions>
          <v-btn color="primary" flat @click.stop="about_dialog=false">Close</v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>

    <!-- open dialog erros -->
    <v-dialog v-model="dialogError" max-width="500px">
      <v-card>
        <v-card-title>
          <span>{{errorMsg}}</span>
          <v-spacer></v-spacer>
        </v-card-title>
        <v-card-actions>
          <v-btn color="primary" flat @click.stop="dialogError=false">Close</v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>
    <!-- end dialog errors -->

    <!-- Open Password Component -->
    <!--<v-dialog v-model="password_change" max-width="500px">-->
    <!--<app-password :passvalue="passvalue"></app-password>-->
    <!--<hr>-->
    <!--<v-card dark color="grey">-->
    <!--<v-card-actions >-->
    <!--<v-btn color="primary" flat @click.stop="password_change=false">Close</v-btn>-->
    <!--<v-btn color="primary" flat @click.stop="save_change_password">Save</v-btn>-->
    <!--</v-card-actions>-->
    <!--</v-card>-->
    <!--</v-dialog>-->
    <!--     <v-dialog v-model="password_change" max-width="500px">
        <app-password ></app-password>
       </v-dialog> -->

    <v-form ref="form">
      <v-dialog v-model="password_change" max-width="500px">
        <v-card>
          <v-card-title>
            <span><h2>Change your password</h2></span>
            <v-spacer></v-spacer>
          </v-card-title>
          <hr>
          <v-container grid-list-md text-xs-left>
            <v-layout row wrap>
              <v-flex xs12>
                <v-card dark color="green">
                  <v-card-text class="px-15"><h3>{{'Email: ' + this.items.email}}</h3>
                    <v-text-field v-model="chpassword.user.password" prepend-icon="lock" name="password" label="Password"
                                  id="reg_password" type="password" required></v-text-field>
                    <v-text-field v-model="chpassword.user.password_confirmation" prepend-icon="lock"
                                  name="confirm password" label="Confirm Password" id="conf_password" type="password"
                                  required></v-text-field>
                    <v-text-field v-model="chpassword.user.current_password" prepend-icon="lock" name="current password"
                                  label="Current Password" id="curr_password" type="password" required></v-text-field>

                  </v-card-text>
                </v-card>
              </v-flex>
            </v-layout>
          </v-container>
          <hr>
          <v-card-actions>
            <v-btn color="primary" flat @click.stop="password_change=false">Close</v-btn>
            <v-btn color="primary" flat @click.stop="save_change_password">Save</v-btn>
          </v-card-actions>
        </v-card>
      </v-dialog>
    </v-form>
    <!-- Enad Password Component -->

    <v-form ref="forms">
      <v-dialog v-model="add_parent" max-width="500px">
        <v-card>
          <v-card-title>
            <span><h2>Add your parent Amka</h2></span>
            <v-spacer></v-spacer>
          </v-card-title>
          <hr>
          <v-container grid-list-md text-xs-left>
            <v-layout row wrap>
              <v-flex xs12>
                <v-card dark color="green">
                  <v-card-text class="px-15"><h3>{{'Name: ' + this.items.full_name}}</h3>
                    <v-text-field v-model="parentadd.user.father_amka" prepend-icon="person" name="father"
                                  label="Father Amka" id="father_amka" type="text"></v-text-field>

                    <v-text-field v-model="parentadd.user.mother_amka" prepend-icon="person" name="mother" label="Mother Amka" id="mother_amka"
                                  type="text"></v-text-field>
                  </v-card-text>
                </v-card>
              </v-flex>
            </v-layout>
          </v-container>
          <hr>
          <v-card-actions>
            <v-btn color="primary" flat @click.stop="add_parent=false">Close</v-btn>
            <v-btn color="primary" flat @click="save_add_parent">Save</v-btn>
          </v-card-actions>
        </v-card>
      </v-dialog>
    </v-form>



    <v-footer color="indigo" app>
      <span class="white--text">&copy; 2017</span>
    </v-footer>
  </v-app>
  <!--  <div class="hello">
       <h1>{{ msg }}</h1>
       </div> -->


</template>

<script>
  //  import VueResource from 'vue-resource'
  import router from '../router'
  import axios from 'axios';

  export default {
    name: 'Main',
    props: ['items'], source: String,
    data() {
      return {
        flag_parent: false,
        progress : true,
        dialogError : false,
        errorMsg: '',
        probabilitys: this.items.disease_probability,
        add_parent: false,
        password_change: false,
        add_diseases_dialog: false,
        about_dialog: false,
        profile_dialog: false,
        dialog: false,
        fullname: this.items.full_name,
        amka: this.items.amka,
        dises: this.items.diseases,
        alldiseases: [],
        helpdiseases: [],
        nav: true,
        msg: 'Welcome ' + this.items.email,
        interval: {},
        value: 0,
        drawer: false,
        fab: false,
        transition: 'slide-y-reverse-transition',
        hover: false,
        direction: 'top',
        right: true,
        left: false,
        bottom: true,
        top: false,
        lalas: [
          {message: 'Foo'},
          {message: 'Bar'}
        ],
        chpassword: {
          user: {
            email: this.items.email,
            password: '',
            password_confirmation: '',
            current_password: ''
          }
        },
        parentadd: {
          user: {
            email: this.items.email,
            full_name: this.items.full_name,
            amka: this.items.amka,
            father_amka: '',
            mother_amka: ''
          }
        },
        passvalue: {
          email: this.items.email,
          save: false,
          close: this.password_change
        },
        chartData: {
          labels: [],
          datasets:[
            {
              data: [],
              backgroundColor: []
            }
          ]
        }
      }
    },
    methods: {
      disadd() {
        console.log("id diseases add: " + this.alldiseases.id);
      },
      logout() {
        router.push({name: "lregister", params: {items: null}});
      },
      diseasesHistory() {
        this.dialog = true;
      },
      open_user_profil() {
        this.profile_dialog = true;
      },
      open_about_dialog() {
        this.about_dialog = true;
      },
      add_diseases() {
        this.add_diseases_dialog = true;
      },
      save_diseases_user(alldiseases) {



        let passdiseases =  {
          user: {
            email: this.items.email,
            diseases: []
          }
        };

        console.log(JSON.stringify(alldiseases));

        alldiseases.forEach(disease => {
          if (disease.hasOwnProperty('hasDisease') && disease.hasDisease) {
            passdiseases.user.diseases.push(disease.id)
          }
        });

        console.log(JSON.stringify(passdiseases, null, 2));

        this.$http.put('api/users/update_history', passdiseases, {emulateJSON: true}).then(response => {
          console.log("save diseases: " + response.data);

          this.dialogError = true;
          this.errorMsg = 'Diseases add';

          for(var i=0;i< passdiseases.user.diseases.length;i++){
            for(var j = 0;j< this.alldiseases.length; j++){
              if(passdiseases.user.diseases[i] == this.alldiseases[j].id){

                for(var k = 0; k < this.probabilitys.length; k++){
                  if(this.probabilitys[k].disease == this.alldiseases[j].name){
                    this.probabilitys.splice(k,1);
                    this.chartData.labels.splice(k,1);
                    this.chartData.datasets[0].data.splice(k,1);
                  }
                }
                this.dises.push(this.alldiseases[j]);
                this.alldiseases.splice(j, 1);
              }
            }
          }
        })
        this.add_diseases_dialog = false;
        // this.alldiseases.prototype.toString.call(null);
        // this.helpdiseases.prototype.toString.call(null);
        // this.dise.prototype.toString.call(null);


      },
      open_password_change() {
        console.log("password_change ==>" + this.password_change);
        this.password_change = true;
        console.log("password_change ==>" + this.password_change);
      },
      save_change_password() {
        console.log(this.items.email);

        this.progress = true;
        // this.passvalue.save = true;

        this.$http.put('/api/users/change_password', this.chpassword, {emulateJSON: true}).then(response => {
          console.log(response.data);
          console.log(this.chpassword);
          // setTimeout(() => this.progress = false, 3000);
          this.$refs.form.reset();
          if(response.data.email == this.items.email){
            this.password_change = false;
            this.$refs.form.reset();
            this.dialogError = true;
            this.errorMsg = 'Password changed';
          }
        })

        this.passwordValidation();
      },
      open_add_parent() {
        if(this.flag_parent == true){
          this.dialogError = true;
          this.errorMsg = "You already add parent amka";
        }
        else {
          this.add_parent = true;
        }


      },
      save_add_parent() {

        if((this.parentadd.user.father_amka == null || this.parentadd.user.father_amka == '')
          && (this.parentadd.user.mother_amka == null || this.parentadd.user.mother_amka == '')){
          this.dialogError = true;
          this.$refs.forms.reset();
          this.errorMsg = 'Amka is empty.Please complete at least one field '
        }
        else if((!!this.parentadd.user.father_amka  ) && ((isNaN(this.parentadd.user.father_amka) == true)
          || this.parentadd.user.father_amka.length < 11)){
          this.dialogError = true;
          this.$refs.forms.reset();
          this.errorMsg = 'Father amka is invalid.Please try again'
        }
        else  if((!!this.parentadd.user.mother_amka )  && ((isNaN(this.parentadd.user.mother_amka) == true)
          || this.parentadd.user.mother_amka.length < 11)){
          this.dialogError = true;
          this.$refs.forms.reset();
          this.errorMsg = 'Mother amka is invalid.Please try again'
        }
        else
        {
          this.$http.put('/api/users/update', this.parentadd, {emulateJSON: true}).then(response => {
            console.log(response.data);
            console.log(this.chpassword);
            if(response.data.email == this.items.email){
              this.add_parent = false;
              this.$refs.forms.reset();
              this.dialogError = true;
              this.errorMsg = 'Parent AMKA add';
              this.flag_parent = true;

              console.log("save add parent prin" + this.probabilitys);
              this.probabilitys = response.data.disease_probability;
              for(var i = 0 ; i < this.probabilitys.length; i++)
              {
                console.log("mesa apo for: " +this.probabilitys[i].disease);
              }
              this.chartCreate();

              console.log("save add parent meta" + this.probabilitys);
            }
          })
        }



        // this.parentAmkaValidation();



      },
      test() {
        this.$http.get('/api/diseases').then(response => {
          console.log(response.data);

          this.helpdiseases = response.data;
          console.log("to mikos " + this.helpdiseases[0].name);
          for (var i = 0; i < this.dises.length; i++) {
            // console.log("to i einai: "+ this.i);

            for (var j = 0; j < this.helpdiseases.length; j++) {
              // console.log("dises: "+this.dises[i].name +" helpdiseases: " + this.helpdiseases[j].name);
              if (this.dises[i].name == this.helpdiseases[j].name) {
                // console.log("diaforetiko: " + this.helpdiseases[j].name)
                this.helpdiseases.splice(j, 1);
              }
              // console.log("helpdiseases: " +this.helpdiseases[i].name);
            }

          }
          this.alldiseases = this.helpdiseases;
        })
      },
      chartCreate(){

        for(var i = 0;i < this.probabilitys.length;i++){
          console.log("this.probabilitys.length: " + this.probabilitys.length);
          this.chartData.labels[i] = this.probabilitys[i].disease;
          console.log("this.probabilitys[i].disease: " + this.probabilitys[i].disease);
          this.chartData.datasets[0].data[i]= this.probabilitys[i].probability;
          console.log("this.probabilitys[i].probability: " + this.probabilitys[i].probability);

          if(this.probabilitys[i].probability <= 10){
            this.chartData.datasets[0].backgroundColor[i] = '#FFEBEE';
          }
          else if(this.probabilitys[i].probability <= 20){
            this.chartData.datasets[0].backgroundColor[i] = '#FFCDD2';
          }
          else if(this.probabilitys[i].probability <= 30){
            this.chartData.datasets[0].backgroundColor[i] = '#EF9A9A';
          }
          else if(this.probabilitys[i].probability <= 40){
            this.chartData.datasets[0].backgroundColor[i] = '#E57373';
          }
          else if(this.probabilitys[i].probability <= 50){
            this.chartData.datasets[0].backgroundColor[i] = '#EF5350';
          }
          else if(this.probabilitys[i].probability <= 60){
            this.chartData.datasets[0].backgroundColor[i] = '#F44336';
          }
          else if(this.probabilitys[i].probability <= 70){
            this.chartData.datasets[0].backgroundColor[i] = '#E53935';
          }
          else if(this.probabilitys[i].probability <= 80){
            this.chartData.datasets[0].backgroundColor[i] = '#D32F2F';
          }
          else if(this.probabilitys[i].probability <= 90){
            this.chartData.datasets[0].backgroundColor[i] = '#C62828';
          }
          else{
            this.chartData.datasets[0].backgroundColor[i] = '#D50000';
          }


        }

        // this.probabilitys.forEach(labels =>{
        //   this.chartData.labels.push(this.probabilitys.disease)
        // });


      },
      passwordValidation(){
        if(this.chpassword.user.password == null || this.chpassword.user.password == '' || this.chpassword.user.password_confirmation == '' || this.chpassword.user.password_confirmation== null || this.chpassword.user.current_password == '' || this.chpassword.user.current_password == null){
          this.dialogError = true;
          this.$refs.form.reset();
          this.progress = false;
          this.errorMsg = 'Please complete all required fields and try again.'
        }
        else if(this.chpassword.user.password.length < 6 || this.chpassword.user.current_password.length < 6 || this.chpassword.user.current_password.length < 6){
          this.dialogError = true;
          this.progress = false;
          this.$refs.form.reset();
          this.errorMsg = 'Passwords must be at least 6 characters'
        }
        else if(this.chpassword.user.password != this.chpassword.user.password_confirmation){
          this.dialogError = true;
          this.$refs.form.reset();
          this.progress = false;
          this.errorMsg = 'Incorrect password confirmation';
        }
      },
      parentAmkaValidation(){



      }
    },
    created: function () {
      this.test();
      this.chartCreate();
      // console.log("label :" +this.probabilitys[0].disease)
      // console.log("probabilitys :" +this.probabilitys[0].probability)
      // console.log("ayto pou psaxno: "+ this.chartData.datasets[0].data[0]);
      // console.log("ayto pou psaxno 2: "+ this.chartData.labels[0]);
    }
  }
</script>

<style scoped>
  h1, h2 {
    font-weight: normal;
  }

  ul {
    list-style-type: none;
    padding: 0;
  }

  li {
    display: inline-block;
    margin: 0 10px;
  }

  a {
    color: #42b983;
  }

  .progress {
    margin-top: 300px;
  }

  .navi {
    /*margin-left: 200px;*/
    /*margin-right: 10px;*/
    /*padding-right: 200px;*/
  }

  .welc {

  }

  .button {
    margin-bottom: 30px;
  }

  .px-15 {
    color: black;
    margin-bottom: 1px;

  }

  .px-16 {
    padding-top: auto;
    padding-bottom: 200px;
    padding-top: 1px;
    height: 230px;
  }


</style>
